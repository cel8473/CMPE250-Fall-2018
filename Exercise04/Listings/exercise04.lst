


ARM Macro Assembler    Page 1 CMPE 250 Exercise Two


    1 00000000                 TTL              CMPE 250 Exercise Two
    2 00000000         ;*******************************************************
                       *********
    3 00000000         ;Name:  Chris Larson 
    4 00000000         ;Date:  4 September 2018
    5 00000000         ;Class:  CMPE-250
    6 00000000         ;Section:  Section 2, Tuesday 2:00pm
    7 00000000         ;-------------------------------------------------------
                       --------
    8 00000000         ;Keil Simulator Template for KL46
    9 00000000         ;R. W. Melton
   10 00000000         ;January 5, 2018
   11 00000000         ;*******************************************************
                       *********
   12 00000000         ;Assembler directives
   13 00000000                 THUMB
   15 00000000         ;*******************************************************
                       *********
   16 00000000         ;EQUates
   17 00000000 00000019 
                       MAX_DATA
                               EQU              25
   18 00000000         ;Standard data masks
   19 00000000 000000FF 
                       BYTE_MASK
                               EQU              0xFF
   20 00000000 0000000F 
                       NIBBLE_MASK
                               EQU              0x0F
   21 00000000         ;Standard data sizes (in bits)
   22 00000000 00000008 
                       BYTE_BITS
                               EQU              8
   23 00000000 00000004 
                       NIBBLE_BITS
                               EQU              4
   24 00000000         ;Architecture data sizes (in bytes)
   25 00000000 00000004 
                       WORD_SIZE
                               EQU              4           ;Cortex-M0+
   26 00000000 00000002 
                       HALFWORD_SIZE
                               EQU              2           ;Cortex-M0+
   27 00000000         ;Architecture data masks
   28 00000000 0000FFFF 
                       HALFWORD_MASK
                               EQU              0xFFFF
   29 00000000         ;Return                 
   30 00000000 00000001 
                       RET_ADDR_T_MASK
                               EQU              1           ;Bit 0 of ret. addr
                                                            . must be
   31 00000000         ;set for BX, BLX, or POP
   32 00000000         ;mask in thumb mode
   33 00000000         ;-------------------------------------------------------
                       --------
   34 00000000         ;Vectors
   35 00000000 000000C0 
                       VECTOR_TABLE_SIZE



ARM Macro Assembler    Page 2 CMPE 250 Exercise Two


                               EQU              0x000000C0  ;KL46
   36 00000000 00000004 
                       VECTOR_SIZE
                               EQU              4           ;Bytes per vector
   37 00000000         ;-------------------------------------------------------
                       --------
   38 00000000         ;CPU CONTROL:  Control register
   39 00000000         ;31-2:(reserved)
   40 00000000         ;   1:SPSEL=current stack pointer select
   41 00000000         ;           0=MSP (main stack pointer) (reset value)
   42 00000000         ;           1=PSP (process stack pointer)
   43 00000000         ;   0:nPRIV=not privileged
   44 00000000         ;        0=privileged (Freescale/NXP "supervisor") (rese
                       t value)
   45 00000000         ;        1=not privileged (Freescale/NXP "user")
   46 00000000 00000002 
                       CONTROL_SPSEL_MASK
                               EQU              2
   47 00000000 00000001 
                       CONTROL_SPSEL_SHIFT
                               EQU              1
   48 00000000 00000001 
                       CONTROL_nPRIV_MASK
                               EQU              1
   49 00000000 00000000 
                       CONTROL_nPRIV_SHIFT
                               EQU              0
   50 00000000         ;-------------------------------------------------------
                       --------
   51 00000000         ;CPU PRIMASK:  Interrupt mask register
   52 00000000         ;31-1:(reserved)
   53 00000000         ;   0:PM=prioritizable interrupt mask:
   54 00000000         ;        0=all interrupts unmasked (reset value)
   55 00000000         ;          (value after CPSIE I instruction)
   56 00000000         ;        1=prioritizable interrrupts masked
   57 00000000         ;          (value after CPSID I instruction)
   58 00000000 00000001 
                       PRIMASK_PM_MASK
                               EQU              1
   59 00000000 00000000 
                       PRIMASK_PM_SHIFT
                               EQU              0
   60 00000000         ;-------------------------------------------------------
                       --------
   61 00000000         ;CPU PSR:  Program status register
   62 00000000         ;Combined APSR, EPSR, and IPSR
   63 00000000         ;-------------------------------------------------------
                       ---
   64 00000000         ;CPU APSR:  Application Program Status Register
   65 00000000         ;31  :N=negative flag
   66 00000000         ;30  :Z=zero flag
   67 00000000         ;29  :C=carry flag
   68 00000000         ;28  :V=overflow flag
   69 00000000         ;27-0:(reserved)
   70 00000000 F0000000 
                       APSR_MASK
                               EQU              0xF0000000
   71 00000000 0000001C 
                       APSR_SHIFT



ARM Macro Assembler    Page 3 CMPE 250 Exercise Two


                               EQU              28
   72 00000000 80000000 
                       APSR_N_MASK
                               EQU              0x80000000
   73 00000000 0000001F 
                       APSR_N_SHIFT
                               EQU              31
   74 00000000 40000000 
                       APSR_Z_MASK
                               EQU              0x40000000
   75 00000000 0000001E 
                       APSR_Z_SHIFT
                               EQU              30
   76 00000000 20000000 
                       APSR_C_MASK
                               EQU              0x20000000
   77 00000000 0000001D 
                       APSR_C_SHIFT
                               EQU              29
   78 00000000 10000000 
                       APSR_V_MASK
                               EQU              0x10000000
   79 00000000 0000001C 
                       APSR_V_SHIFT
                               EQU              28
   80 00000000         ;-------------------------------------------------------
                       ---
   81 00000000         ;CPU EPSR
   82 00000000         ;31-25:(reserved)
   83 00000000         ;   24:T=Thumb state bit
   84 00000000         ;23- 0:(reserved)
   85 00000000 01000000 
                       EPSR_MASK
                               EQU              0x01000000
   86 00000000 00000018 
                       EPSR_SHIFT
                               EQU              24
   87 00000000 01000000 
                       EPSR_T_MASK
                               EQU              0x01000000
   88 00000000 00000018 
                       EPSR_T_SHIFT
                               EQU              24
   89 00000000         ;-------------------------------------------------------
                       ---
   90 00000000         ;CPU IPSR
   91 00000000         ;31-6:(reserved)
   92 00000000         ; 5-0:Exception number=number of current exception
   93 00000000         ;      0=thread mode
   94 00000000         ;      1:(reserved)
   95 00000000         ;      2=NMI
   96 00000000         ;      3=hard fault
   97 00000000         ;      4-10:(reserved)
   98 00000000         ;     11=SVCall
   99 00000000         ;     12-13:(reserved)
  100 00000000         ;     14=PendSV
  101 00000000         ;     15=SysTick
  102 00000000         ;     16=IRQ0
  103 00000000         ;     16-47:IRQ(Exception number - 16)



ARM Macro Assembler    Page 4 CMPE 250 Exercise Two


  104 00000000         ;     47=IRQ31
  105 00000000         ;     48-63:(reserved)
  106 00000000 0000003F 
                       IPSR_MASK
                               EQU              0x0000003F
  107 00000000 00000000 
                       IPSR_SHIFT
                               EQU              0
  108 00000000 0000003F 
                       IPSR_EXCEPTION_MASK
                               EQU              0x0000003F
  109 00000000 00000000 
                       IPSR_EXCEPTION_SHIFT
                               EQU              0
  110 00000000         ;-------------------------------------------------------
                       ---
  111 00000000 80000000 
                       PSR_N_MASK
                               EQU              APSR_N_MASK
  112 00000000 0000001F 
                       PSR_N_SHIFT
                               EQU              APSR_N_SHIFT
  113 00000000 40000000 
                       PSR_Z_MASK
                               EQU              APSR_Z_MASK
  114 00000000 0000001E 
                       PSR_Z_SHIFT
                               EQU              APSR_Z_SHIFT
  115 00000000 20000000 
                       PSR_C_MASK
                               EQU              APSR_C_MASK
  116 00000000 0000001D 
                       PSR_C_SHIFT
                               EQU              APSR_C_SHIFT
  117 00000000 10000000 
                       PSR_V_MASK
                               EQU              APSR_V_MASK
  118 00000000 0000001C 
                       PSR_V_SHIFT
                               EQU              APSR_V_SHIFT
  119 00000000 01000000 
                       PSR_T_MASK
                               EQU              EPSR_T_MASK
  120 00000000 00000018 
                       PSR_T_SHIFT
                               EQU              EPSR_T_SHIFT
  121 00000000 0000003F 
                       PSR_EXCEPTION_MASK
                               EQU              IPSR_EXCEPTION_MASK
  122 00000000 00000000 
                       PSR_EXCEPTION_SHIFT
                               EQU              IPSR_EXCEPTION_SHIFT
  123 00000000         ;-------------------------------------------------------
                       ---
  124 00000000         ;Stack
  125 00000000 00000100 
                       SSTACK_SIZE
                               EQU              0x00000100
  126 00000000         ;*******************************************************



ARM Macro Assembler    Page 5 CMPE 250 Exercise Two


                       *********
  127 00000000         ;Program
  128 00000000         ;Linker requires Reset_Handler
  129 00000000                 AREA             MyCode,CODE,READONLY
  130 00000000                 ENTRY
  131 00000000                 EXPORT           Reset_Handler
  132 00000000                 EXPORT           P
  133 00000000                 EXPORT           Q
  134 00000000                 EXPORT           Results
  135 00000000                 IMPORT           InitData
  136 00000000                 IMPORT           LoadData
  137 00000000                 IMPORT           TestData
  138 00000000         Reset_Handler
                               PROC             {}
  139 00000000         main
  140 00000000         ;-------------------------------------------------------
                       --------
  141 00000000         ;Initialize registers R0-R12
  142 00000000 F7FF FFFE       BL               RegInit
  143 00000004         ;>>>>> begin main program code <<<<<
  144 00000004 F7FF FFFE       BL               InitData
  145 00000008 4A24            LDR              R2,=P
  146 0000000A 4B25            LDR              R3,=Q
  147 0000000C         LOOP
  148 0000000C F7FF FFFE       BL               LoadData
  149 00000010 D20B            BCS              QUIT
  150 00000012         
  151 00000012 6810            LDR              R0,[R2,#0]
  152 00000014 6819            LDR              R1,[R3,#0]
  153 00000016         
  154 00000016 F7FF FFFE       BL               DIVU
  155 0000001A         
  156 0000001A D301            BCC              VALID
  157 0000001C         
  158 0000001C 4821            LDR              R0,=0xFFFFFFFF
  159 0000001E 4921            LDR              R1,=0xFFFFFFFF
  160 00000020         
  161 00000020 6010    VALID   STR              R0,[R2,#0]
  162 00000022 6019            STR              R1,[R3,#0]
  163 00000024 F7FF FFFE       BL               TestData
  164 00000028 E7F0            B                LOOP
  165 0000002A         
  166 0000002A         QUIT
  167 0000002A         ;>>>>>   end main program code <<<<<
  168 0000002A         ;Stay here
  169 0000002A E7FE            B                .
  170 0000002C                 ENDP
  171 0000002C         ;-------------------------------------------------------
                       --------
  172 0000002C         RegInit PROC             {}
  173 0000002C         ;*******************************************************
                       *********
  174 0000002C         ;Initializes register n to value 0xnnnnnnnn, for n in 
  175 0000002C         ;{0x0-0xC,0xE}
  176 0000002C         ;*******************************************************
                       *********
  177 0000002C         ;Put return on stack
  178 0000002C B500            PUSH             {LR}
  179 0000002E         ;Initialize registers



ARM Macro Assembler    Page 6 CMPE 250 Exercise Two


  180 0000002E 491E            LDR              R1,=0x11111111
  181 00000030 184A            ADDS             R2,R1,R1
  182 00000032 1853            ADDS             R3,R2,R1
  183 00000034 185C            ADDS             R4,R3,R1
  184 00000036 1865            ADDS             R5,R4,R1
  185 00000038 186E            ADDS             R6,R5,R1
  186 0000003A 1877            ADDS             R7,R6,R1
  187 0000003C 1878            ADDS             R0,R7,R1
  188 0000003E 4680            MOV              R8,R0
  189 00000040 1840            ADDS             R0,R0,R1
  190 00000042 4681            MOV              R9,R0
  191 00000044 1840            ADDS             R0,R0,R1
  192 00000046 4682            MOV              R10,R0
  193 00000048 1840            ADDS             R0,R0,R1
  194 0000004A 4683            MOV              R11,R0
  195 0000004C 1840            ADDS             R0,R0,R1
  196 0000004E 4684            MOV              R12,R0
  197 00000050 1840            ADDS             R0,R0,R1
  198 00000052 1840            ADDS             R0,R0,R1
  199 00000054 4686            MOV              R14,R0
  200 00000056 2000            MOVS             R0,#0
  201 00000058 BD00            POP              {PC}
  202 0000005A                 ENDP
  203 0000005A         ;-------------------------------------------------------
                       --------
  204 0000005A         ;>>>>> begin subroutine code <<<<<
  205 0000005A         DIVU    PROC             {R2-R14}
  206 0000005A B41C            PUSH             {R2-R4}
  207 0000005C 2200            MOVS             R2,#0       ;Sets Quotient to z
                                                            ero
  208 0000005E         
  209 0000005E 2900            CMP              R1,#0       ;Sees if Divisor is
                                                             zero
  210 00000060 D009            BEQ              FLAGCHANGE
  211 00000062         
  212 00000062 2800            CMP              R0,#0
  213 00000064 D004            BEQ              ZERO
  214 00000066         
  215 00000066 4288    WHILE   CMP              R0,R1       ;Is Dividend greate
                                                            r or equal to Divis
                                                            or
  216 00000068 D30D            BLO              CLEAR
  217 0000006A         
  218 0000006A 1A40            SUBS             R0, R0, R1  ;Dividend = Dividen
                                                            d - Divisor
  219 0000006C 1C52            ADDS             R2, R2, #1  ;Quotient + 1
  220 0000006E E7FA            B                WHILE
  221 00000070         
  222 00000070 2000    ZERO    MOVS             R0,#0
  223 00000072 2100            MOVS             R1,#0
  224 00000074 E007            B                CLEAR
  225 00000076         
  226 00000076 F3EF 8300 
                       FLAGCHANGE
                               MRS              R3, APSR    ;Sets the flag on r
                                                            eturn
  227 0000007A 2420            MOVS             R4,#0x20
  228 0000007C 0624            LSLS             R4, R4, #24
  229 0000007E 4323            ORRS             R3, R3, R4



ARM Macro Assembler    Page 7 CMPE 250 Exercise Two


  230 00000080 F383 8800       MSR              APSR, R3
  231 00000084 E006            B                DONE
  232 00000086         
  233 00000086 F3EF 8300 
                       CLEAR   MRS              R3, APSR    ;Clears the flag on
                                                             return
  234 0000008A 2420            MOVS             R4,#0X20
  235 0000008C 0624            LSLS             R4, R4, #24
  236 0000008E 43A3            BICS             R3, R3, R4
  237 00000090 F383 8800       MSR              APSR, R3
  238 00000094         
  239 00000094         DONE
  240 00000094 0001            MOVS             R1, R0
  241 00000096 0010            MOVS             R0, R2
  242 00000098 BC1C            POP              {R2,R3,R4}
  243 0000009A 4770            BX               LR
  244 0000009C                 ENDP
  245 0000009C         ;>>>>>   end subroutine code <<<<<
  246 0000009C                 ALIGN
  247 0000009C         ;*******************************************************
                       *********
  248 0000009C         ;Vector Table Mapped to Address 0 at Reset
  249 0000009C         ;Linker requires __Vectors to be exported
  250 0000009C 00000000 
              00000000 
              FFFFFFFF 
              11111111         AREA             RESET, DATA, READONLY
  251 00000000                 EXPORT           __Vectors
  252 00000000                 EXPORT           __Vectors_End
  253 00000000                 EXPORT           __Vectors_Size
  254 00000000         __Vectors
  255 00000000         ;ARM core vectors
  256 00000000 00000000        DCD              __initial_sp ;00:end of stack
  257 00000004 00000000        DCD              Reset_Handler ;reset vector
  258 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 8 CMPE 250 Exercise Two


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00               SPACE            (VECTOR_TABLE_SIZE - (2 * VECTO
R_SIZE))
  259 000000C0         __Vectors_End
  260 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  261 000000C0                 ALIGN
  262 000000C0         ;*******************************************************
                       *********
  263 000000C0         ;Constants
  264 000000C0                 AREA             MyConst,DATA,READONLY
  265 00000000         ;>>>>> begin constants here <<<<<
  266 00000000 00000033 
                       const_F DCD              51
  267 00000004 00000007 
                       const_G DCD              7
  268 00000008         ;>>>>>   end constants here <<<<<
  269 00000008         ;*******************************************************
                       *********
  270 00000008                 AREA             |.ARM.__at_0x1FFFE000|,DATA,REA
DWRITE,ALIGN=3
  271 00000000                 EXPORT           __initial_sp
  272 00000000         ;Allocate system stack



ARM Macro Assembler    Page 9 CMPE 250 Exercise Two


  273 00000000                 IF               :LNOT::DEF:SSTACK_SIZE
  275                          ENDIF
  276 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 10 CMPE 250 Exercise Two


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       Stack_Mem
                               SPACE            SSTACK_SIZE
  277 00000100         __initial_sp
  278 00000100         ;*******************************************************
                       *********
  279 00000100         ;Variables
  280 00000100                 AREA             MyData,DATA,READWRITE
  281 00000000         ;>>>>> begin variables here <<<<
  282 00000000 00 00 00 
              00       P       SPACE            4
  283 00000004 00 00 00 
              00       Q       SPACE            4
  284 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    Results SPACE            2*MAX_DATA
  285 0000003A         ;>>>>>   end variables here <<<<<
  286 0000003A                 END



ARM Macro Assembler    Page 11 CMPE 250 Exercise Two


Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=inter
work --depend=.\objects\exercise04.d -o.\objects\exercise04.o -I.\RTE\_Target_1
 -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.14.0\Device\Include -IC:\Keil_v5
\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION S
ETA 524" --predefine="MKL46Z256xxx4 SETA 1" --list=.\listings\exercise04.lst Ex
ercise04.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CLEAR 00000086

Symbol: CLEAR
   Definitions
      At line 233 in file Exercise04.s
   Uses
      At line 216 in file Exercise04.s
      At line 224 in file Exercise04.s

DIVU 0000005A

Symbol: DIVU
   Definitions
      At line 205 in file Exercise04.s
   Uses
      At line 154 in file Exercise04.s
Comment: DIVU used once
DONE 00000094

Symbol: DONE
   Definitions
      At line 239 in file Exercise04.s
   Uses
      At line 231 in file Exercise04.s
Comment: DONE used once
FLAGCHANGE 00000076

Symbol: FLAGCHANGE
   Definitions
      At line 226 in file Exercise04.s
   Uses
      At line 210 in file Exercise04.s
Comment: FLAGCHANGE used once
LOOP 0000000C

Symbol: LOOP
   Definitions
      At line 147 in file Exercise04.s
   Uses
      At line 164 in file Exercise04.s
Comment: LOOP used once
MyCode 00000000

Symbol: MyCode
   Definitions
      At line 129 in file Exercise04.s
   Uses
      None
Comment: MyCode unused
QUIT 0000002A

Symbol: QUIT
   Definitions
      At line 166 in file Exercise04.s
   Uses
      At line 149 in file Exercise04.s
Comment: QUIT used once
RegInit 0000002C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: RegInit
   Definitions
      At line 172 in file Exercise04.s
   Uses
      At line 142 in file Exercise04.s
Comment: RegInit used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 138 in file Exercise04.s
   Uses
      At line 131 in file Exercise04.s
      At line 257 in file Exercise04.s

VALID 00000020

Symbol: VALID
   Definitions
      At line 161 in file Exercise04.s
   Uses
      At line 156 in file Exercise04.s
Comment: VALID used once
WHILE 00000066

Symbol: WHILE
   Definitions
      At line 215 in file Exercise04.s
   Uses
      At line 220 in file Exercise04.s
Comment: WHILE used once
ZERO 00000070

Symbol: ZERO
   Definitions
      At line 222 in file Exercise04.s
   Uses
      At line 213 in file Exercise04.s
Comment: ZERO used once
main 00000000

Symbol: main
   Definitions
      At line 139 in file Exercise04.s
   Uses
      None
Comment: main unused
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 250 in file Exercise04.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 254 in file Exercise04.s
   Uses
      At line 251 in file Exercise04.s
      At line 260 in file Exercise04.s

__Vectors_End 000000C0

Symbol: __Vectors_End
   Definitions
      At line 259 in file Exercise04.s
   Uses
      At line 252 in file Exercise04.s
      At line 260 in file Exercise04.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyConst 00000000

Symbol: MyConst
   Definitions
      At line 264 in file Exercise04.s
   Uses
      None
Comment: MyConst unused
const_F 00000000

Symbol: const_F
   Definitions
      At line 266 in file Exercise04.s
   Uses
      None
Comment: const_F unused
const_G 00000004

Symbol: const_G
   Definitions
      At line 267 in file Exercise04.s
   Uses
      None
Comment: const_G unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x1FFFE000 00000000

Symbol: .ARM.__at_0x1FFFE000
   Definitions
      At line 270 in file Exercise04.s
   Uses
      None
Comment: .ARM.__at_0x1FFFE000 unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 276 in file Exercise04.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000100

Symbol: __initial_sp
   Definitions
      At line 277 in file Exercise04.s
   Uses
      At line 256 in file Exercise04.s
      At line 271 in file Exercise04.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyData 00000000

Symbol: MyData
   Definitions
      At line 280 in file Exercise04.s
   Uses
      None
Comment: MyData unused
P 00000000

Symbol: P
   Definitions
      At line 282 in file Exercise04.s
   Uses
      At line 132 in file Exercise04.s
      At line 145 in file Exercise04.s

Q 00000004

Symbol: Q
   Definitions
      At line 283 in file Exercise04.s
   Uses
      At line 133 in file Exercise04.s
      At line 146 in file Exercise04.s

Results 00000008

Symbol: Results
   Definitions
      At line 284 in file Exercise04.s
   Uses
      At line 134 in file Exercise04.s
Comment: Results used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

APSR_C_MASK 20000000

Symbol: APSR_C_MASK
   Definitions
      At line 76 in file Exercise04.s
   Uses
      At line 115 in file Exercise04.s
Comment: APSR_C_MASK used once
APSR_C_SHIFT 0000001D

Symbol: APSR_C_SHIFT
   Definitions
      At line 77 in file Exercise04.s
   Uses
      At line 116 in file Exercise04.s
Comment: APSR_C_SHIFT used once
APSR_MASK F0000000

Symbol: APSR_MASK
   Definitions
      At line 70 in file Exercise04.s
   Uses
      None
Comment: APSR_MASK unused
APSR_N_MASK 80000000

Symbol: APSR_N_MASK
   Definitions
      At line 72 in file Exercise04.s
   Uses
      At line 111 in file Exercise04.s
Comment: APSR_N_MASK used once
APSR_N_SHIFT 0000001F

Symbol: APSR_N_SHIFT
   Definitions
      At line 73 in file Exercise04.s
   Uses
      At line 112 in file Exercise04.s
Comment: APSR_N_SHIFT used once
APSR_SHIFT 0000001C

Symbol: APSR_SHIFT
   Definitions
      At line 71 in file Exercise04.s
   Uses
      None
Comment: APSR_SHIFT unused
APSR_V_MASK 10000000

Symbol: APSR_V_MASK
   Definitions
      At line 78 in file Exercise04.s
   Uses
      At line 117 in file Exercise04.s
Comment: APSR_V_MASK used once
APSR_V_SHIFT 0000001C

Symbol: APSR_V_SHIFT



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 79 in file Exercise04.s
   Uses
      At line 118 in file Exercise04.s
Comment: APSR_V_SHIFT used once
APSR_Z_MASK 40000000

Symbol: APSR_Z_MASK
   Definitions
      At line 74 in file Exercise04.s
   Uses
      At line 113 in file Exercise04.s
Comment: APSR_Z_MASK used once
APSR_Z_SHIFT 0000001E

Symbol: APSR_Z_SHIFT
   Definitions
      At line 75 in file Exercise04.s
   Uses
      At line 114 in file Exercise04.s
Comment: APSR_Z_SHIFT used once
BYTE_BITS 00000008

Symbol: BYTE_BITS
   Definitions
      At line 22 in file Exercise04.s
   Uses
      None
Comment: BYTE_BITS unused
BYTE_MASK 000000FF

Symbol: BYTE_MASK
   Definitions
      At line 19 in file Exercise04.s
   Uses
      None
Comment: BYTE_MASK unused
CONTROL_SPSEL_MASK 00000002

Symbol: CONTROL_SPSEL_MASK
   Definitions
      At line 46 in file Exercise04.s
   Uses
      None
Comment: CONTROL_SPSEL_MASK unused
CONTROL_SPSEL_SHIFT 00000001

Symbol: CONTROL_SPSEL_SHIFT
   Definitions
      At line 47 in file Exercise04.s
   Uses
      None
Comment: CONTROL_SPSEL_SHIFT unused
CONTROL_nPRIV_MASK 00000001

Symbol: CONTROL_nPRIV_MASK
   Definitions
      At line 48 in file Exercise04.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: CONTROL_nPRIV_MASK unused
CONTROL_nPRIV_SHIFT 00000000

Symbol: CONTROL_nPRIV_SHIFT
   Definitions
      At line 49 in file Exercise04.s
   Uses
      None
Comment: CONTROL_nPRIV_SHIFT unused
EPSR_MASK 01000000

Symbol: EPSR_MASK
   Definitions
      At line 85 in file Exercise04.s
   Uses
      None
Comment: EPSR_MASK unused
EPSR_SHIFT 00000018

Symbol: EPSR_SHIFT
   Definitions
      At line 86 in file Exercise04.s
   Uses
      None
Comment: EPSR_SHIFT unused
EPSR_T_MASK 01000000

Symbol: EPSR_T_MASK
   Definitions
      At line 87 in file Exercise04.s
   Uses
      At line 119 in file Exercise04.s
Comment: EPSR_T_MASK used once
EPSR_T_SHIFT 00000018

Symbol: EPSR_T_SHIFT
   Definitions
      At line 88 in file Exercise04.s
   Uses
      At line 120 in file Exercise04.s
Comment: EPSR_T_SHIFT used once
HALFWORD_MASK 0000FFFF

Symbol: HALFWORD_MASK
   Definitions
      At line 28 in file Exercise04.s
   Uses
      None
Comment: HALFWORD_MASK unused
HALFWORD_SIZE 00000002

Symbol: HALFWORD_SIZE
   Definitions
      At line 26 in file Exercise04.s
   Uses
      None
Comment: HALFWORD_SIZE unused
IPSR_EXCEPTION_MASK 0000003F



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: IPSR_EXCEPTION_MASK
   Definitions
      At line 108 in file Exercise04.s
   Uses
      At line 121 in file Exercise04.s
Comment: IPSR_EXCEPTION_MASK used once
IPSR_EXCEPTION_SHIFT 00000000

Symbol: IPSR_EXCEPTION_SHIFT
   Definitions
      At line 109 in file Exercise04.s
   Uses
      At line 122 in file Exercise04.s
Comment: IPSR_EXCEPTION_SHIFT used once
IPSR_MASK 0000003F

Symbol: IPSR_MASK
   Definitions
      At line 106 in file Exercise04.s
   Uses
      None
Comment: IPSR_MASK unused
IPSR_SHIFT 00000000

Symbol: IPSR_SHIFT
   Definitions
      At line 107 in file Exercise04.s
   Uses
      None
Comment: IPSR_SHIFT unused
MAX_DATA 00000019

Symbol: MAX_DATA
   Definitions
      At line 17 in file Exercise04.s
   Uses
      At line 284 in file Exercise04.s
Comment: MAX_DATA used once
NIBBLE_BITS 00000004

Symbol: NIBBLE_BITS
   Definitions
      At line 23 in file Exercise04.s
   Uses
      None
Comment: NIBBLE_BITS unused
NIBBLE_MASK 0000000F

Symbol: NIBBLE_MASK
   Definitions
      At line 20 in file Exercise04.s
   Uses
      None
Comment: NIBBLE_MASK unused
PRIMASK_PM_MASK 00000001

Symbol: PRIMASK_PM_MASK
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 58 in file Exercise04.s
   Uses
      None
Comment: PRIMASK_PM_MASK unused
PRIMASK_PM_SHIFT 00000000

Symbol: PRIMASK_PM_SHIFT
   Definitions
      At line 59 in file Exercise04.s
   Uses
      None
Comment: PRIMASK_PM_SHIFT unused
PSR_C_MASK 20000000

Symbol: PSR_C_MASK
   Definitions
      At line 115 in file Exercise04.s
   Uses
      None
Comment: PSR_C_MASK unused
PSR_C_SHIFT 0000001D

Symbol: PSR_C_SHIFT
   Definitions
      At line 116 in file Exercise04.s
   Uses
      None
Comment: PSR_C_SHIFT unused
PSR_EXCEPTION_MASK 0000003F

Symbol: PSR_EXCEPTION_MASK
   Definitions
      At line 121 in file Exercise04.s
   Uses
      None
Comment: PSR_EXCEPTION_MASK unused
PSR_EXCEPTION_SHIFT 00000000

Symbol: PSR_EXCEPTION_SHIFT
   Definitions
      At line 122 in file Exercise04.s
   Uses
      None
Comment: PSR_EXCEPTION_SHIFT unused
PSR_N_MASK 80000000

Symbol: PSR_N_MASK
   Definitions
      At line 111 in file Exercise04.s
   Uses
      None
Comment: PSR_N_MASK unused
PSR_N_SHIFT 0000001F

Symbol: PSR_N_SHIFT
   Definitions
      At line 112 in file Exercise04.s
   Uses
      None



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Comment: PSR_N_SHIFT unused
PSR_T_MASK 01000000

Symbol: PSR_T_MASK
   Definitions
      At line 119 in file Exercise04.s
   Uses
      None
Comment: PSR_T_MASK unused
PSR_T_SHIFT 00000018

Symbol: PSR_T_SHIFT
   Definitions
      At line 120 in file Exercise04.s
   Uses
      None
Comment: PSR_T_SHIFT unused
PSR_V_MASK 10000000

Symbol: PSR_V_MASK
   Definitions
      At line 117 in file Exercise04.s
   Uses
      None
Comment: PSR_V_MASK unused
PSR_V_SHIFT 0000001C

Symbol: PSR_V_SHIFT
   Definitions
      At line 118 in file Exercise04.s
   Uses
      None
Comment: PSR_V_SHIFT unused
PSR_Z_MASK 40000000

Symbol: PSR_Z_MASK
   Definitions
      At line 113 in file Exercise04.s
   Uses
      None
Comment: PSR_Z_MASK unused
PSR_Z_SHIFT 0000001E

Symbol: PSR_Z_SHIFT
   Definitions
      At line 114 in file Exercise04.s
   Uses
      None
Comment: PSR_Z_SHIFT unused
RET_ADDR_T_MASK 00000001

Symbol: RET_ADDR_T_MASK
   Definitions
      At line 30 in file Exercise04.s
   Uses
      None
Comment: RET_ADDR_T_MASK unused
SSTACK_SIZE 00000100




ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

Symbol: SSTACK_SIZE
   Definitions
      At line 125 in file Exercise04.s
   Uses
      At line 276 in file Exercise04.s
Comment: SSTACK_SIZE used once
VECTOR_SIZE 00000004

Symbol: VECTOR_SIZE
   Definitions
      At line 36 in file Exercise04.s
   Uses
      At line 258 in file Exercise04.s
Comment: VECTOR_SIZE used once
VECTOR_TABLE_SIZE 000000C0

Symbol: VECTOR_TABLE_SIZE
   Definitions
      At line 35 in file Exercise04.s
   Uses
      At line 258 in file Exercise04.s
Comment: VECTOR_TABLE_SIZE used once
WORD_SIZE 00000004

Symbol: WORD_SIZE
   Definitions
      At line 25 in file Exercise04.s
   Uses
      None
Comment: WORD_SIZE unused
__Vectors_Size 000000C0

Symbol: __Vectors_Size
   Definitions
      At line 260 in file Exercise04.s
   Uses
      At line 253 in file Exercise04.s
Comment: __Vectors_Size used once
49 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

InitData 00000000

Symbol: InitData
   Definitions
      At line 135 in file Exercise04.s
   Uses
      At line 144 in file Exercise04.s
Comment: InitData used once
LoadData 00000000

Symbol: LoadData
   Definitions
      At line 136 in file Exercise04.s
   Uses
      At line 148 in file Exercise04.s
Comment: LoadData used once
TestData 00000000

Symbol: TestData
   Definitions
      At line 137 in file Exercise04.s
   Uses
      At line 163 in file Exercise04.s
Comment: TestData used once
3 symbols
413 symbols in table
